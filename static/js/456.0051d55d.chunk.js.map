{"version":3,"file":"static/js/456.0051d55d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactFilter/ContactFilter.module.css?a140","redux/filter.selectors.js","components/ContactFilter/ContactFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/PhoneBook/PhoneBook.module.css?b449","components/PhoneBook/PhoneBook.jsx","../node_modules/nanoid/index.browser.js","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactFilter_input__8mWOi\"};","export const selectFilter = state => state.filter.filter;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactFilter.module.css';\nimport { setFilter } from 'redux/filterReducer';\nimport { selectFilter } from 'redux/filter.selectors';\n\nexport const ContactFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <input\n      className={css.input}\n      type=\"text\"\n      placeholder=\"Search contacts\"\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  );\n  \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import css from './ContactList.module.css';\n\nexport const ContactList = ({ contacts, handleDeleteContact }) => (\n  <ul>\n    {contacts.map(contact => (\n      <li className={css.item} key={contact.id}>\n        {contact.name}: {contact.number}\n        <button\n          type='button'\n          className={css.button}\n          onClick={() => handleDeleteContact(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PhoneBook_container__qH1yN\",\"form\":\"PhoneBook_form__snyuG\",\"label\":\"PhoneBook_label__dqtiy\",\"input\":\"PhoneBook_input__kGmrx\",\"button\":\"PhoneBook_button__hxO60\"};","import { useState } from 'react';\nimport css from './PhoneBook.module.css';\n\n\nexport const PhoneBook = ({ handleAddNumber }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <form\n        className={css.form}\n        onSubmit={event => {\n          handleAddNumber({\n            event,\n            name,\n            number,\n          });\n          setName('');\n          setNumber('');\n        }}\n      >\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            onChange={handleInput}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            onChange={handleInput}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"[\\+]?[\\d\\s\\(\\)-]+\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts.selectors';\nimport { addContactsThunk, deleteContactsThunk } from 'redux/contactsReducer';\nimport { selectFilter } from 'redux/filter.selectors';\n\n\n\nconst ContactsPage = () => {\n const contacts = useSelector(selectContacts);\n const filter = useSelector(selectFilter);\nconst dispatch = useDispatch();\n\n const addContact = ({ event, name, number }) => {\n   event.preventDefault();\n   if (\n     contacts.some(\n       contact => contact.name === name || contact.number === number\n     )\n   ) {\n     toast.error('Oops, this number is already exist!', {\n       position: 'top-center',\n       autoClose: 2000,\n       closeOnClick: true,\n       pauseOnHover: true,\n     });\n     return;\n   }\n   dispatch(addContactsThunk({ name, number, id: nanoid() }));\n };\n\n const filteredContacts = filter => {\n   try {\n     return contacts.filter(\n       contact =>\n         contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n         contact.number.includes(filter)\n     );\n   } catch (error) {\n     return contacts;\n   }\n };\n\n const handleDeleteContact = id => {\n   dispatch(deleteContactsThunk(id));\n };\n\n  return (\n    <div>\n      <h1 className=\"title\">Phonebook</h1>\n      <PhoneBook handleAddNumber={addContact} />\n      <h2 className=\"title\">Contacts</h2>\n      <ContactFilter filter={filter} contacts={contacts} />\n      <ContactList\n        contacts={filteredContacts(filter) ?? []}\n        handleDeleteContact={handleDeleteContact}\n      />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","ContactFilter","useSelector","dispatch","useDispatch","className","css","type","placeholder","value","onChange","e","target","toLowerCase","setFilter","ContactList","contacts","handleDeleteContact","map","contact","name","number","onClick","id","PhoneBook","handleAddNumber","useState","setName","setNumber","handleInput","event","onSubmit","required","pattern","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","selectContacts","preventDefault","some","toast","position","autoClose","closeOnClick","pauseOnHover","addContactsThunk","includes","error","filteredContacts","deleteContactsThunk"],"sourceRoot":""}